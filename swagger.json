{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json",
    "binary"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Entry point for the application.",
    "title": "TTS_deck_builder",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "basePath": "/",
  "paths": {
    "/games": {
      "get": {
        "description": "Get a list of existing games",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Games"
        ],
        "summary": "Get games list",
        "operationId": "RequestListOfGames",
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseListOfGames"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      },
      "post": {
        "description": "Allows you to create a new game",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Games"
        ],
        "summary": "Create game",
        "operationId": "RequestCreateGame",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "x-go-name": "Description"
                },
                "image": {
                  "type": "string",
                  "x-go-name": "Image"
                },
                "name": {
                  "type": "string",
                  "x-go-name": "Name"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseCreateGame"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      }
    },
    "/games/{game}": {
      "get": {
        "description": "Get an existing game",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Games"
        ],
        "summary": "Get game",
        "operationId": "RequestGame",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseGame"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      },
      "delete": {
        "description": "Allows you to delete an existing game",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Games"
        ],
        "summary": "Delete game",
        "operationId": "RequestDeleteGame",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseDeleteGame"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      },
      "patch": {
        "description": "Allows you to update an existing game",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Games"
        ],
        "summary": "Update game",
        "operationId": "RequestUpdateGame",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "x-go-name": "Description"
                },
                "image": {
                  "type": "string",
                  "x-go-name": "Image"
                },
                "name": {
                  "type": "string",
                  "x-go-name": "Name"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseUpdateGame"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      }
    },
    "/games/{game}/collections": {
      "get": {
        "description": "Get a list of existing collections",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Get collections list",
        "operationId": "RequestListOfCollections",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseListOfCollections"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      },
      "post": {
        "description": "Allows you to create a new collection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Create collection",
        "operationId": "RequestCreateCollection",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "x-go-name": "Description"
                },
                "image": {
                  "type": "string",
                  "x-go-name": "Image"
                },
                "name": {
                  "type": "string",
                  "x-go-name": "Name"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseCreateCollection"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      }
    },
    "/games/{game}/collections/{collection}": {
      "get": {
        "description": "Get an existing collection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Get collection",
        "operationId": "RequestCollection",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Collection",
            "name": "collection",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseCollection"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      },
      "delete": {
        "description": "Allows you to delete an existing collection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Delete collection",
        "operationId": "RequestDeleteCollection",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Collection",
            "name": "collection",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseDeleteCollection"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      },
      "patch": {
        "description": "Allows you to update an existing collection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Update collection",
        "operationId": "RequestUpdateCollection",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Collection",
            "name": "collection",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "x-go-name": "Description"
                },
                "image": {
                  "type": "string",
                  "x-go-name": "Image"
                },
                "name": {
                  "type": "string",
                  "x-go-name": "Name"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseUpdateCollection"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      }
    },
    "/games/{game}/collections/{collection}/decks": {
      "get": {
        "description": "Get a list of existing decks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Decks"
        ],
        "summary": "Get decks list",
        "operationId": "RequestListOfDecks",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Collection",
            "name": "collection",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseListOfDecks"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      },
      "post": {
        "description": "Allows you to create a new deck",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Decks"
        ],
        "summary": "Create deck",
        "operationId": "RequestCreateDeck",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Collection",
            "name": "collection",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "backside": {
                  "type": "string",
                  "x-go-name": "BacksideImage"
                },
                "type": {
                  "type": "string",
                  "x-go-name": "Type"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseCreateDeck"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      }
    },
    "/games/{game}/collections/{collection}/decks/{deck}": {
      "get": {
        "description": "Get an existing deck",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Decks"
        ],
        "summary": "Get deck",
        "operationId": "RequestDeck",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Collection",
            "name": "collection",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Deck",
            "name": "deck",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseDeck"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      },
      "delete": {
        "description": "Allows you to delete an existing deck",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Decks"
        ],
        "summary": "Delete deck",
        "operationId": "RequestDeleteDeck",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Collection",
            "name": "collection",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Deck",
            "name": "deck",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseDeleteDeck"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      },
      "patch": {
        "description": "Allows you to update an existing deck",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Decks"
        ],
        "summary": "Update deck",
        "operationId": "RequestUpdateDeck",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Collection",
            "name": "collection",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Deck",
            "name": "deck",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "backside": {
                  "type": "string",
                  "x-go-name": "BacksideImage"
                },
                "type": {
                  "type": "string",
                  "x-go-name": "Type"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseUpdateDeck"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      }
    },
    "/games/{game}/collections/{collection}/decks/{deck}/image": {
      "get": {
        "description": "Get an image of existing deck",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "image/png",
          "image/jpeg",
          "image/gif"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Images"
        ],
        "summary": "Get deck image",
        "operationId": "RequestDeckImage",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Collection",
            "name": "collection",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Deck",
            "name": "deck",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseDeckImage"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      }
    },
    "/games/{game}/collections/{collection}/image": {
      "get": {
        "description": "Get an image of existing collection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "image/png",
          "image/jpeg",
          "image/gif"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Images"
        ],
        "summary": "Get collection image",
        "operationId": "RequestCollectionImage",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Collection",
            "name": "collection",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseCollectionImage"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      }
    },
    "/games/{game}/decks": {
      "get": {
        "description": "Get a list of all existing decks in game",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Decks"
        ],
        "summary": "Get list of all decks in game",
        "operationId": "RequestListOfAllDecks",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseListOfAllDecks"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      }
    },
    "/games/{game}/image": {
      "get": {
        "description": "Get an image of existing game",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "image/png",
          "image/jpeg",
          "image/gif"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Images"
        ],
        "summary": "Get game image",
        "operationId": "RequestGameImage",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Game",
            "name": "game",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseGameImage"
          },
          "default": {
            "$ref": "#/responses/ResponseError"
          }
        }
      }
    }
  },
  "definitions": {
    "CollectionInfo": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "type": "string",
          "x-go-name": "Id"
        },
        "image": {
          "type": "string",
          "x-go-name": "Image"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "tts_deck_build/internal/collections"
    },
    "DeckInfo": {
      "type": "object",
      "properties": {
        "backside": {
          "type": "string",
          "x-go-name": "BacksideImage"
        },
        "id": {
          "type": "string",
          "x-go-name": "Id"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "tts_deck_build/internal/decks"
    },
    "Err": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "tts_deck_build/internal/errors"
    },
    "GameInfo": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "type": "string",
          "x-go-name": "Id"
        },
        "image": {
          "type": "string",
          "x-go-name": "Image"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "tts_deck_build/internal/games"
    }
  },
  "responses": {
    "ResponseCollection": {
      "description": "Collection",
      "schema": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/definitions/CollectionInfo"
          }
        }
      }
    },
    "ResponseCollectionImage": {
      "description": "Collection image",
      "schema": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "uint8"
        }
      }
    },
    "ResponseCreateCollection": {
      "description": "Status of collection creation",
      "schema": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/definitions/CollectionInfo"
          }
        }
      }
    },
    "ResponseCreateDeck": {
      "description": "Status of deck creation",
      "schema": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/definitions/DeckInfo"
          }
        }
      }
    },
    "ResponseCreateGame": {
      "description": "Status of game creation",
      "schema": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/definitions/GameInfo"
          }
        }
      }
    },
    "ResponseDeck": {
      "description": "Deck",
      "schema": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/definitions/DeckInfo"
          }
        }
      }
    },
    "ResponseDeckImage": {
      "description": "Deck image",
      "schema": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "uint8"
        }
      }
    },
    "ResponseDeleteCollection": {
      "description": "Collection deletion status"
    },
    "ResponseDeleteDeck": {
      "description": "Deck deletion status"
    },
    "ResponseDeleteGame": {
      "description": "Game deletion status"
    },
    "ResponseError": {
      "description": "Default error response",
      "schema": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "$ref": "#/definitions/Err"
          }
        }
      }
    },
    "ResponseGame": {
      "description": "Game",
      "schema": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/definitions/GameInfo"
          }
        }
      }
    },
    "ResponseGameImage": {
      "description": "Game image",
      "schema": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "uint8"
        }
      }
    },
    "ResponseListOfAllDecks": {
      "description": "List of decks",
      "schema": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DeckInfo"
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "ResponseListOfCollections": {
      "description": "List of collections",
      "schema": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CollectionInfo"
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "ResponseListOfDecks": {
      "description": "List of decks",
      "schema": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DeckInfo"
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "ResponseListOfGames": {
      "description": "List of games",
      "schema": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GameInfo"
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "ResponseUpdateCollection": {
      "description": "Status of collection update",
      "schema": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/definitions/CollectionInfo"
          }
        }
      }
    },
    "ResponseUpdateDeck": {
      "description": "Status of deck update",
      "schema": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/definitions/DeckInfo"
          }
        }
      }
    },
    "ResponseUpdateGame": {
      "description": "Status of game update",
      "schema": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/definitions/GameInfo"
          }
        }
      }
    }
  }
}